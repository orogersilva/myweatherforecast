plugins {
    id 'com.android.library'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
}

android {

    compileSdk buildConfig.compileSdk

    defaultConfig {

        minSdk buildConfig.minSdk
        targetSdk buildConfig.targetSdk

        testInstrumentationRunner "com.orogersilva.myweatherforecast.testing.runner.MyWeatherForecastTestRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidComposeCompilerVersion.get()
    }
}

dependencies {

    api project(':feature:daily-api')

    implementation libs.android.lifecycle.viewModelKtx
    debugImplementation libs.android.test.composeManifest

    implementation libs.coroutines.android
    implementation libs.dagger.hilt.android
    kapt libs.dagger.hilt.compiler
    coreLibraryDesugaring libs.desugarSdkLibs.core
    implementation libs.kotlin.collections.immutable

    testImplementation project(':platform:testing')

    testImplementation libs.coroutines.test
    testImplementation libs.junit.core
    testImplementation libs.kotlin.test
    testImplementation libs.turbine.core

    androidTestImplementation project(':platform:testing')

    kaptAndroidTest libs.dagger.hilt.androidCompiler
}